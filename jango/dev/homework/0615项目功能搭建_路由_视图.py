"""
=============================
@Time : 2020/6/16 20:53
@Author : AllyZhou
@FileDec: 
==============================
"""
"""
0615_项目工程搭建_路由_视图
一、必做题
1.全局路由和子路由的作用以及路由匹配规则

"""
# 全局路由的作用：所有的路由在寻址时都会先从主路由开始找 因此即便在子路由中定义了，也需要在主路由中注册一下 path('page/', include('projects.urls'))
# 子路由的作用：可以定义每个项目中自己的路由
#
# 3.路由匹配规则：a 从列表的第一个元素开始（从上到下）开始匹配
#               b 一但调用成功 会自动调用path第二个函数所指定的视图函数
#               c 一但匹配成功，不会再往下匹配
#               d 如果匹配不成功，会返回一个状态码为404的页面
#               e url路由信息推荐使用/结尾
# 4.可以再子应用中定义子路由，子应用名/urls.py中定义
# 5.可以使用include函数来加载子路由，第一个参数为字符串 第二个参数为（'子应用名.urls'）
# 6.所有路由在寻址时都会先从主路由开始找，如果url第一部分匹配成功 那么会将url剩下的部分
"""

2.搭建Django工程
提示：

	a.创建一个应用, 并通过视图(函数视图或者类视图)来展示内容

	b.把演练效果录屏上传(推荐)或者将效果截图上传





二、选做题
1.前后端分离和不分离开发模式的区别
提示：


前后端不分离

      在前后端不分离的应用模式中，前端页面看到的效果都是由后端控制，由后端渲染页面或重定向，也就是后端需要控制前端的展示，前端与后端的耦合度很高。

        这种应用模式比较适合纯网页应用，但是当后端对接App时，App可能并不需要后端返回一个HTML网页，而仅仅是数据本身，所以后端原本返回网页的接口不再适用于前端App应用，为了对接App后端还需再开发一套接口。
前后端分离

      在前后端分离的应用模式中，后端仅返回前端所需的数据，不再渲染HTML页面，不再控制前端的效果。至于前端用户看到什么效果，从后端请求的数据如何加载到前端中，都由前端自己决定，网页有网页的处理方式，App有App的处理方式，但无论哪种前端，所需的数据基本相同，后端仅需开发一套逻辑对外提供数据即可。

在前后端分离的应用模式中 ，前端与后端的耦合度相对较低。

在前后端分离的应用模式中，我们通常将后端开发的每个视图都称为一个接口，或者API，前端通过访问接口来对数据进行增删改查。        
"""